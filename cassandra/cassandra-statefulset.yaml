apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cassandra
  labels:
    base: cassandra
    k8s.eip.work/layer: basicservice
spec:
  serviceName: cassandra
  replicas: 3
  selector:
    matchLabels:
      base: cassandra
  template:
    metadata:
      labels:
        base: cassandra
    spec:
      terminationGracePeriodSeconds: 1800
      containers:
      - name: cassandra
        image: cassandra:3.11
        imagePullPolicy: Always
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          requests:
           memory: 1Gi
# add privileges to IPC_LOCK
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - nodetool drain
        env:
        - name: MAX_HEAP_SIZE
          value: 512M
        - name: HEAP_NEWSIZE
          value: 100M
        - name: CASSANDRA_SEEDS
          value: "cassandra-0.cassandra.default.svc.cluster.local"
        - name: CASSANDRA_CLUSTER_NAME
          value: "my cluster"
        - name: CASSANDRA_RACK
          value: "RAC1"
        - name: CASSANDRA_DC
          value: "DC1"
        - name: CASSANDRA_ENDPOINT_SNITCH
          value: "GossipingPropertyFileSnitch"
        - name: CASSANDRA_NUM_TOKENS
          value: "256"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
           tcpSocket:
             port: 9042
           initialDelaySeconds: 20
           timeoutSeconds: 5
           periodSeconds: 10
           successThreshold: 1
           failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 9042
          initialDelaySeconds: 20
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /var/lib/cassandra
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: rbd
      resources:
        requests:
          storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    base: cassandra
  name: cassandra
spec:
  clusterIP: None
  ports:
  - port: 7000
  selector:
    base: cassandra
---
apiVersion: v1
kind: Service
metadata:
  name: cassandra-svc
  labels:
    name: cassandra-svc
spec:
  ports:
    - name: cql
      port: 9042
      targetPort: 9042
    - name: jmx
      port: 7199
      targetPort: 7199
  selector:
    base: cassandra
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: cassandra-pdb
spec:
  selector:
    matchLabels:
      base: cassandra
  maxUnavailable: 1
